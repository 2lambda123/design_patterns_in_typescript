{"name":"Design patterns in typescript","tagline":"Design pattern implementations in TypeScript","body":"### Intro\r\nThis project is about to give hands-on implementation examples of the Gang Of Four's design patterns in [Typescript](https://github.com/Microsoft/TypeScript).\r\n\r\n### Design Patterns\r\n\r\n#### Creational Patterns\r\n\r\n* [Singleton](https://github.com/torokmark/design_patterns_in_typescript/tree/master/singleton)\r\n* [Abstract Factory](https://github.com/torokmark/design_patterns_in_typescript/tree/master/abstract_factory)\r\n* [Factory Method](https://github.com/torokmark/design_patterns_in_typescript/tree/master/factory_method)\r\n* [Builder](https://github.com/torokmark/design_patterns_in_typescript/tree/master/builder)\r\n* [Prototype](https://github.com/torokmark/design_patterns_in_typescript/tree/master/prototype)\r\n\r\n\r\n#### Structural Patterns\r\n\r\n* [Adapter](https://github.com/torokmark/design_patterns_in_typescript/tree/master/adapter)\r\n* [Bridge](https://github.com/torokmark/design_patterns_in_typescript/tree/master/bridge)\r\n* [Composite](https://github.com/torokmark/design_patterns_in_typescript/tree/master/composite)\r\n* [Decorator](https://github.com/torokmark/design_patterns_in_typescript/tree/master/decorator)\r\n* [Facade](https://github.com/torokmark/design_patterns_in_typescript/tree/master/facade)\r\n* [Flyweight](https://github.com/torokmark/design_patterns_in_typescript/tree/master/flyweight)\r\n* [Proxy](https://github.com/torokmark/design_patterns_in_typescript/tree/master/proxy)\r\n\r\n\r\n#### Behavioral Patterns\r\n\r\n* [Chain of Responsibility](https://github.com/torokmark/design_patterns_in_typescript/tree/master/chain_of_responsibility)\r\n* [Command](https://github.com/torokmark/design_patterns_in_typescript/tree/master/command)\r\n* [Interpreter](https://github.com/torokmark/design_patterns_in_typescript/tree/master/interpreter)\r\n* [Iterator](https://github.com/torokmark/design_patterns_in_typescript/tree/master/iterator)\r\n* [Mediator](https://github.com/torokmark/design_patterns_in_typescript/tree/master/mediator)\r\n* [Memento](https://github.com/torokmark/design_patterns_in_typescript/tree/master/memento)\r\n* [Observer](https://github.com/torokmark/design_patterns_in_typescript/tree/master/observer)\r\n* [State](https://github.com/torokmark/design_patterns_in_typescript/tree/master/state)\r\n* [Strategy](https://github.com/torokmark/design_patterns_in_typescript/tree/master/strategy)\r\n* [Template Method](https://github.com/torokmark/design_patterns_in_typescript/tree/master/template_method)\r\n* [Visitor](https://github.com/torokmark/design_patterns_in_typescript/tree/master/visitor)\r\n\r\n### Contributors\r\nFeel free to fork it and add implementation of real life examples!\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}